{"name": "TC #2 to delete a Booking", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL 'None/auth': No scheme supplied. Perhaps you meant https://None/auth?", "trace": "@pytest.fixture\n    def create_token():\n>       response = requests.post(url=auth_endpoint, headers=headers, json=auth_payload)\n\nSecond_Month_July-2024\\Date_26_July_2024\\conftest.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n.venv\\Lib\\site-packages\\requests\\api.py:115: in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\n.venv\\Lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n.venv\\Lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\n.venv\\Lib\\site-packages\\requests\\sessions.py:484: in prepare_request\n    p.prepare(\n.venv\\Lib\\site-packages\\requests\\models.py:367: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [POST]>, url = 'None/auth', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'None/auth': No scheme supplied. Perhaps you meant https://None/auth?\n\n.venv\\Lib\\site-packages\\requests\\models.py:438: MissingSchema"}, "description": "This test case is to delete a Booking", "start": 1722616297988, "stop": 1722616297988, "uuid": "028f122e-80e9-45af-b83b-1f38ce1794e1", "historyId": "b5481ce78862c22717290e8ebe2c50cb", "testCaseId": "b5481ce78862c22717290e8ebe2c50cb", "fullName": "Second_Month_July-2024.Date_26_July_2024.test_Lab190#test_delete_booking", "labels": [{"name": "parentSuite", "value": "Second_Month_July-2024.Date_26_July_2024"}, {"name": "suite", "value": "test_Lab190"}, {"name": "host", "value": "B1-L0W115181"}, {"name": "thread", "value": "17868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Second_Month_July-2024.Date_26_July_2024.test_Lab190"}]}